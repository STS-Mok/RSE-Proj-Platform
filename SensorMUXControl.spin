{  Proj:         SensorMUXControl.spin  Platform:     Parallax Project USB Board  Rev:          1.0  Author:       Mok ST Sonia  Date:         04/03/2022  Log:        04/03/2022              fork as SensorMUXControl.spin        08/02/2022              intro 2 side US to prep for mecanum mvmt        29/11/2021              RSE1101 functional version        18/11/2021              Fixed typos on variables        17/11/2021              Instructed version        14/11/2021              First version}CON        _clkmode                = xtal1 + pll16x                                                        'Standard clock mode * crystal frequency = 80 MHz        _xinfreq                = 5_000_000        _conClkFreq             = ((_clkmode - xtal1) >> 6) * _xinfreq        _ms001                  = _conClkFreq / 1_000        tcaSCL  = 8        tcaSDA  = 9        tcaRST  = 10        tcaAdd  = $70        ToF1SCL  = 0        ToF1SDA  = 1        ToF2SCL  = 2        ToF2SDA  = 3        ToF1RST  = 6        ToF2RST  = 7        ToFAdd   = $29        usAdd = $57VAR  long  cgSnsr, corestk[128]OBJ  'mux to Tof and US  mux      : "TCA9548Av2.spin"PUB init(tofval, usval)  '_ms001 := mainMS  stop                          'Stop running core first to refresh  cgSnsr := cognew(snsrOP(tofval, usval), @corestk)  returnPUB stop  if cgSnsr > 0    cogstop(cgSnsr~)  returnPUB snsrOp(tofval, usval) mux.PInit2 pause(1000) 'ToF init {mux.PSelect(0, 0) tofinit(0) pause(500) mux.PSelect(1, 0) tofinit(1) pause(500)}  repeat    'tof frt - 0    MUX.Pselect(0, 0)    long[tofval][0] := mux.GetSingleRange(ToFAdd)    Pause(1)    'tof bck - 1    mux.Pselect(1, 0)    long[tofval][1] := mux.GetSingleRange(ToFAdd)    Pause(1)    'usF    mux.Pselect(2, 0)    mux.PWriteByte(2, usAdd, $01)    Pause(30)    long[usval][0] := mux.readHCSR04(2, usAdd) * 100/254    Pause(1)    mux.resetHCSR04(2, usAdd)    'usB    mux.Pselect(3, 0)    mux.PWriteByte(3, usAdd, $01)    Pause(30)    long[usval][1] := mux.readHCSR04(3, usAdd) * 100/254    Pause(1)    mux.resetHCSR04(3, usAdd)    'usL    mux.Pselect(4, 0)    mux.PWriteByte(4, usAdd, $01)    Pause(30)    long[usval][2] := mux.readHCSR04(4, usAdd) * 100/254    Pause(1)    mux.resetHCSR04(4, usAdd)    'usR    mux.Pselect(5, 0)    mux.PWriteByte(5, usAdd, $01)    Pause(30)    long[usval][3] := mux.readHCSR04(5, usAdd) * 100/254    Pause(1)    mux.resetHCSR04(5, usAdd)PUB tofinit(no)  case no    0:      mux.initVL6180X(ToF1RST)      mux.ChipReset(1, ToF1RST)      Pause(500)      mux.FreshReset(ToFAdd)      mux.MandatoryLoad(ToFAdd)      mux.RecommendedLoad(ToFAdd)      mux.FreshReset(ToFAdd)    1:      mux.initVL6180X(ToF2RST)      mux.ChipReset(1, ToF2RST)      Pause(500)      mux.FreshReset(ToFAdd)      mux.MandatoryLoad(ToFAdd)      mux.RecommendedLoad(ToFAdd)      mux.FreshReset(ToFAdd)  returnPUB pause(ms) | t               'pause fn for util use  t := cnt - 1088  repeat (ms #> 0)    waitcnt(t += _ms001)  return